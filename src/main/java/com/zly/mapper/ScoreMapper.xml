<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zly.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.zly.model.Score">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="studentId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="test_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="subject" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="paper_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="mark" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, studentId, test_name, subject, paper_id, mark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ex_score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ex_score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zly.model.Score">
    insert into ex_score (id, studentId, test_name, 
      subject, paper_id, mark
      )
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=VARCHAR}, #{testName,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{paperId,jdbcType=INTEGER}, #{mark,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zly.model.Score">
    insert into ex_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentid != null">
        studentId,
      </if>
      <if test="testName != null">
        test_name,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="paperId != null">
        paper_id,
      </if>
      <if test="mark != null">
        mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="testName != null">
        #{testName,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="paperId != null">
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zly.model.Score">
    update ex_score
    <set>
      <if test="studentid != null">
        studentId = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="testName != null">
        test_name = #{testName,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="paperId != null">
        paper_id = #{paperId,jdbcType=INTEGER},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zly.model.Score">
    update ex_score
    set studentId = #{studentid,jdbcType=VARCHAR},
      test_name = #{testName,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      paper_id = #{paperId,jdbcType=INTEGER},
      mark = #{mark,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>